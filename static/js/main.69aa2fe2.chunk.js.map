{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactList","contacts","OnDeleteContact","className","s","contactList","map","id","name","number","type","onClick","button","propType","PropTypes","arrayOf","shape","isRequired","string","func","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","target","value","preventDefault","label","input","onChange","Filter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","contact","shortid","generate","find","toLowerCase","alert","PrevStateContacts","currentTarget","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69aa2fe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__Tg8NX\",\"label\":\"Filter_label__1-oGp\",\"input\":\"Filter_input__2v0az\"};","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, OnDeleteContact }) => (\r\n    <ul className={s.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li className={s.contacts} key={id}>\r\n                <p className={s.name}>{name}:</p>\r\n                <p className={s.number}>{number}</p>\r\n                <button type='button' onClick={() => OnDeleteContact(id)} className={s.button}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propType = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n    OnDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n      \r\n    }\r\n\r\n  const handleSubmit = event => {\r\n        event.preventDefault();\r\n         onSubmit(name, number);\r\n\r\n            setName('');\r\n            setNumber('');\r\n     } \r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label className={s.label}>Name\r\n                <input className={s.input}\r\n                    type='text'\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={handleChange}> \r\n                </input>\r\n            </label>\r\n            <label className={s.label}>Number\r\n                <input className={s.input}\r\n                    type='text'\r\n                    name='number'\r\n                    value={number} onChange={handleChange}> \r\n                </input>\r\n            </label>\r\n            <button className={s.button} type='submit'>Add contact</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n// class ContactForm extends React.Component {\r\n//     state = {\r\n//      name: '',\r\n//      number: ''\r\n//     }\r\n//     handleChange = event => {\r\n//         const { name, value } = event.target;\r\n//         this.setState( {[name]: value,})\r\n//     }\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault();\r\n        \r\n//         this.props.onSubmit({ ...this.state })\r\n\r\n//         this.setState({ name: '', number: '' });\r\n//      }\r\n\r\n// render() {\r\n//     return (\r\n//         <form onSubmit={this.handleSubmit}>\r\n//             <label className={s.label}>Name\r\n//                 <input className={s.input}\r\n//                     type='text'\r\n//                     name='name'\r\n//                     value={this.state.name}\r\n//                     onChange={this.handleChange}> \r\n//                 </input>\r\n//             </label>\r\n//             <label className={s.label}>Number\r\n//                 <input className={s.input}\r\n//                     type='text'\r\n//                     name='number'\r\n//                     value={this.state.number} onChange={this.handleChange}> \r\n//                 </input>\r\n//             </label>\r\n//             <button className={s.button} type='submit'>Add contact</button>\r\n//         </form>\r\n//     )\r\n//     }\r\n// }\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n    // export default ContactForm;","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>Find contacts by name\r\n        <input className={s.input} type='text' value={value} onChange={onChange}></input>\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}","//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport shortid from 'shortid';\nimport Filter from './components/Filter/Filter';\nimport useLocalStorage from './components/hooks/useLocalStorage';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useLocalStorage('filter', '');;\n\n const addContact = (name, number) => {\n   \n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find( contact => contact.name.toLowerCase() === name.toLowerCase(),)) {\n      alert(`${name} is already in contacts.`);\n    \n    } else {\n      setContacts(PrevStateContacts => [contact, ...PrevStateContacts],\n      );\n    }\n };\n  \n  const deleteContacts = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId)\n    );\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  }\n\n  const visibleContacts = () => {\n  \n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  };\n\n  return (\n     <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n        <Filter value={filter} onChange={changeFilter}/>\n         <h2>Contacts</h2>\n        <ContactList contacts={visibleContacts()} OnDeleteContact={deleteContacts}/>\n   \n    </div>\n  );\n}\n\n// class App extends React.Component {\n//   state = {\n//     contacts: [],\n     \n//     filter: ''\n//   }\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(PrevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//     }\n    \n//   }\n//   deleteContacts = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n//     }));\n//   };\n\n\n//  addContact = ({ name, number }) => {\n   \n//     const contact = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n\n//     const { contacts } = this.state;\n\n//     if (contacts.find( contact => contact.name.toLowerCase() === name.toLowerCase(),)) {\n//       alert(`${name} is already in contacts.`);\n    \n//     } else {\n//       this.setState(prevState => ({\n//       contacts: [contact, ...prevState.contacts],\n//       }));\n//     }\n//   };\n  \n\n//   changeFilter = event => {\n//     this.setState({filter: event.currentTarget.value})\n//   }\n    \n    \n//  visibleContacts = () => {\n//     const { contacts, filter } = this.state;\n\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n\n//   render() {\n//     const { filter } = this.state;\n    \n//     return (\n//       <div>\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={this.addContact} />\n//         <Filter value={filter} onChange={this.changeFilter}/>\n//          <h2>Contacts</h2>\n//         <ContactList contacts={this.visibleContacts()} OnDeleteContact={this.deleteContacts}/>\n   \n//     </div>\n//     )\n    \n//   }\n// };\n\n// export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3v_3y\",\"name\":\"ContactList_name__23Ebk\",\"number\":\"ContactList_number__gCT8d\",\"button\":\"ContactList_button__RUWnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__18Fi1\",\"input\":\"ContactForm_input__1Dj_B\",\"button\":\"ContactForm_button__2b8di\"};"],"sourceRoot":""}